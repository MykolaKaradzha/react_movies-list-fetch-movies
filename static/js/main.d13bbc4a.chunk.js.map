{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","utils/normalizeMovieData.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","imgUrl","className","src","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","addMovie","error","setError","useState","setQuery","setMovie","isLoading","setIsLoading","findMovie","a","dataFromServer","movieData","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","newMovie","some","film","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d13bbc4a.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const imgUrl = movie?.imgUrl === 'N/A'\n    ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n    : movie?.imgUrl;\n\n  if (!movie) {\n    return <div>No movie fetched, check your connection.</div>;\n  }\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[] | null;\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies && movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=3f5654b5';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { normalizeMovieData } from '../../utils/normalizeMovieData';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  addMovie: (newMovie: Movie) => void;\n  error: string;\n  setError: React.Dispatch<React.SetStateAction<string>>\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie, error, setError }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const findMovie = async () => {\n    setIsLoading(true);\n    try {\n      const dataFromServer = await getMovie(query);\n\n      if ('Error' in dataFromServer) {\n        setError(dataFromServer.Error);\n      } else {\n        setMovie(normalizeMovieData(dataFromServer as MovieData));\n      }\n    } catch (err: any) {\n      throw new Error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleOnChangeQuery = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setQuery(event.target.value);\n    if (error) {\n      setError('');\n    }\n  };\n\n  const handleOnSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    findMovie();\n  };\n\n  const handleOnClickAddMovie = () => {\n    if (!movie) {\n      return;\n    }\n\n    addMovie(movie);\n    setMovie(null);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleOnSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleOnChangeQuery}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {error}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light', {\n                  'is-loading': isLoading,\n                },\n              )}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleOnClickAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from '../types/MovieData';\nimport { Movie } from '../types/Movie';\n\nconst PLACEHOLDER = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport function normalizeMovieData(movieData: MovieData): Movie {\n  return {\n    title: movieData.Title,\n    description: movieData.Plot,\n    imgUrl: movieData.Poster || PLACEHOLDER,\n    imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}/`,\n    imdbId: movieData.imdbID,\n  };\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [error, setError] = useState('');\n\n  const addMovie = (newMovie: Movie) => {\n    if (movies.some(film => film.imdbId === newMovie.imdbId)) {\n      setError('Movie is already in the list!');\n\n      return;\n    }\n\n    setMovies(prevMovies => [...prevMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          error={error}\n          setError={setError}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}